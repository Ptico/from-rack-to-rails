# Rack

Rack - это библиотека взаимодействия application-сервера c фреймворками.
Все rack-совместимые application-сервера (webrick, mongrel, passenger, thin, unicorn и т.д.) по умолчанию при старте ищут конфигурационный файл config.ru, являющийся, по сути обычным ruby-файлом. Создадим в нем простейшее приложение.

Главной отправной точкой в нем будет инструкция `run`. Она ожидает экземпляр обьекта в котором определен метод `call` и передает в него единственным параметром всю информацию о http-запросе в виде hash.
В качестве возвращаемого значения, rack ожидает массив из трех элементов:

0. Код состояния (Integer) - http://ru.wikipedia.org/wiki/%D0%A1%D0%BF%D0%B8%D1%81%D0%BE%D0%BA_%D0%BA%D0%BE%D0%B4%D0%BE%D0%B2_%D1%81%D0%BE%D1%81%D1%82%D0%BE%D1%8F%D0%BD%D0%B8%D1%8F_HTTP
1. Заголовки ответа (Hash) - http://ru.wikipedia.org/wiki/%D0%97%D0%B0%D0%B3%D0%BE%D0%BB%D0%BE%D0%B2%D0%BA%D0%B8_HTTP
2. Тело ответа (почему-то Array) - может быть текстом, HTML-файлом, просто файлом, да и вообще чем угодно (при этом важно посылать соответствующий заголовок "Content-Type")

Создадим маленький HelloWorld на rack, для примера выведем все значения параметра env.

Чтобы увидеть результат выполнения в браузере, нужно поставить gem "rack", любой сервер на выбор, зайти в текущую директорию и запустить команду `rackup -p 3000`

Зайдем из браузера по следующему URL: `http://localhost:3000/test?key=value` - сервер выдаст нам отформатированный список параметров.
Из них, в ближайшее время нам будут интересны следующие параметры:

* REQUEST_URI
* HTTP_HOST
* REQUEST_METHOD
* PATH_INFO
* QUERY_STRING