# Rack

Rack is a separate library to providate interaction between application server and ruby apps like Rails framework.

When you enter a url in a browser, it looks for an IP address of the requested server and sends to it the next information:

* HTTP-method - https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol
* Request URL - https://en.wikipedia.org/wiki/Uniform_Resource_Locator
* Headers of the request - https://en.wikipedia.org/wiki/List_of_HTTP_header_fields 

An application server gets a request, and passes it to rack to be proccessed. Rack transforms received data in to understandable for ruby app format (as a ruby hash). 
What Rack does actually in general is:
* Reads headers (including cookies)
* Breakes url in to functional parts like server, port etc.
* Looks for method 'call' can calls it with 'env' param as a hash.

All rack compatible servers (webrick, mongrel, passenger, thin, unicorn etc) by default look for 'config.ru' file when they are started which in fact is just a ruby file. 
Let's create a simple app in it.

The starting point will be 'run' method. A 'call' method will be an entering point in our application. 
Rack expects any application to return an array of 3 elements which will be used to create a response to be sent to browser.

0. Status Code - https://en.wikipedia.org/wiki/List_of_HTTP_status_codes
1. HTTP Response headers - https://en.wikipedia.org/wiki/List_of_HTTP_header_fields#Response_fields
2. HTTP Response Body (which is an array) can be for example a text, an HTML-file, a file. The only requirement is that it should sent appropriate header 'Content-Type'. 
As example, if response body is in 'JSON' format then 'Content-Type' should be 'application/json'. Just to be sure that choosen header is correct - check with specification, google or stackoverflow - http://stackoverflow.com/questions/477816/what-is-the-correct-json-content-type.
More about HTTP messages.
http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html

We will create a small HelloWorld on rack. For example we will display all http request parameters.

In order to see the result of our app execution you have to:
1. Install any server.
2. Install 'rack' gem with the next command: gem install rack
3. Type in command line: rackup -p 3000
4. Visit next url 'http://localhost:3000/test?key=value'

In the nearest future we will be interested in the next parameters:
* REQUEST_URI
* HTTP_HOST
* REQUEST_METHOD
* PATH_INFO
* QUERY_STRING

